@*
 * Copyright © 2022-Present The Synapse Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
*@
@namespace Synapse.Dashboard
<CascadingValue Value="@States">
    <DynamicComponent @ref="modal" Type="Type" Parameters="Parameters" />
</CascadingValue>
@code {
    [CascadingParameter] public virtual ICollection<StateDefinition> States { get; set; } = null!;

    [Parameter] public virtual Type Type { get; set; } = null!;

    [Parameter] public virtual IDictionary<string, object> Parameters { get; set; } = null!;

    public object? Instance => this.modal.Instance;

    protected DynamicComponent modal = null!;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);
        if (firstRender)
        {
            await ((ModalBase)this.modal.Instance!).ShowAsync();
            this.StateHasChanged();
        }
    }
}
