@namespace Synapse.Dashboard
@inherits EditorModal<WorkflowSummaryModel>

@if (model != null) {
    <div class="modal fade @(Active ? "show d-block" : "d-none")" tabindex="-1" role="dialog">
        <div class="modal-dialog modal-dialog-centered @modalSizeClass" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Workflow definition</h5>
                    @if (ShowCloseIcon)
                    {
                        <button type="button" class="close btn" data-dismiss="modal" aria-label="Close" @onclick="HideAsync">
                            <small class="oi oi-x"></small>
                        </button>
                    }
                
                </div>
                <div class="modal-body">
                    <EditForm Model="@model" OnValidSubmit="@OnValidSubmitAsync">
                        <DataAnnotationsValidator />
                        <ValidationSummary />
                        <div class="mb-3">
                            <label for="definition-name" class="form-label">Name</label>
                            <InputText @bind-Value="model.Name" id="definition-name" class="form-control" placeholder="Name" @onfocusout="OnNameChanged" />
                            <ValidationMessage For="@(() => model.Name)" class="form-text" />
                        </div>
                        <div class="mb-3">
                            <label for="definition-version" class="form-label">Version</label>
                            <InputText @bind-Value="model.Version" id="definition-version" class="form-control" placeholder="Version"/>
                            <ValidationMessage For="@(() => model.Version)" class="form-text" />
                        </div>
                        <div class="mb-3">
                            <label for="definition-id" class="form-label">Id</label>
                            <InputText @bind-Value="model.Id" id="definition-id" class="form-control" placeholder="Id"/>
                            <ValidationMessage For="@(() => model.Id)" class="form-text" />
                        </div>
                        <div class="mb-3">
                            <label for="definition-key" class="form-label">Instance key expression</label>
                            <InputText @bind-Value="model.Key" id="definition-key" class="form-control" placeholder="Instance key expression"/>
                            <ValidationMessage For="@(() => model.Key)" class="form-text" />
                        </div>
                        <div class="mb-3">
                            <label for="spec-version" class="form-label">Specification version</label>
                            <input type="text" id="spec-version" class="form-control" value="@Constants.SpecVersion" placeholder="0.8" readonly disabled/>
                            <ValidationMessage For="@(() => model.SpecVersion)" class="form-text" />
                        </div>
                        <div class="mb-3">
                            <label for="definition-description" class="form-label">Description</label>
                            <InputTextArea @bind-Value="model.Description" id="definition-description" class="form-control" placeholder="Description"/>
                            <ValidationMessage For="@(() => model.Description)" class="form-text" />
                        </div>
                        <div>
                            <button class="btn btn-outline-dark " type="submit">Save</button>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
    @if (Active)
    {
        <div class="modal-backdrop fade show"></div>
    }
}

@code {
    protected void OnNameChanged()
    {
        if (string.IsNullOrWhiteSpace(this.model.Id) && !string.IsNullOrWhiteSpace(this.model.Name))
        {
            this.model.Id = this.model.Name.ToLowerInvariant();
        }
    }
}
