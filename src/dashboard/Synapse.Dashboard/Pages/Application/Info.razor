@* 
    Copyright © 2022-Present The Synapse Authors
    <p>
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
    <p>
    http://www.apache.org/licenses/LICENSE-2.0
    <p>
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
*@

@page "/application/info"
@using Synapse.Dashboard.Features
@inherits StatefulComponent<V1ApplicationState>
@inject IBreadcrumbService BreadcrumbService

<PageTitle>Application Info</PageTitle>

@if(applicationInfo != null)
{
    <h5>General Info</h5>
    <table class="table table-striped table-bordered my-3">
        <tbody>
            <tr>
                <td>Name</td>
                <td><span class="badge bg-secondary">@applicationInfo.Name</span></td>
            </tr>
            <tr>
                <td>Version</td>
                <td><span class="badge bg-secondary">@applicationInfo.Version</span></td>
            </tr>
            <tr>
                <td>Operational System</td>
                <td><span class="badge bg-secondary">@applicationInfo.OSDescription</span></td>
            </tr>
            <tr>
                <td>NET Framework</td>
                <td><span class="badge bg-secondary">@applicationInfo.FrameworkDescription</span></td>
            </tr>
            <tr>
                <td>Environment</td>
                <td><span class="badge bg-secondary">@applicationInfo.EnvironmentName</span></td>
            </tr>
            <tr>
                <td>Serverless Workflow SDK</td>
                <td><span class="badge bg-secondary">@applicationInfo.ServerlessWorkflowSdkVersion</span></td>
            </tr>
             <tr>
            <td>Workflow Runtime</td>
                 <td><span class="badge bg-secondary">@applicationInfo.WorkflowRuntimeName</span></td>
            </tr>
            <tr>
                <td>Supported Runtime Expression Languages</td>
                <td>@((MarkupString)string.Join(',', applicationInfo.SupportedRuntimeExpressionLanguages.Select(l => $@"<span class=""badge bg-secondary"">{l}</span>")))</td>
            </tr>
        </tbody>
    </table>
    <Expander Class="mb-3">
        <Header>
                <h5>Environment Variables</h5>
        </Header>
        <Body>
            <table class="table table-striped table-bordered my-3">
        <thead>
            <tr>
                <th>Name</th>
                <th>Value</th>
            </tr>
        </thead>
        <tbody>
            @foreach(var env in applicationInfo.EnvironmentVariables)
            {
                <tr>
                    <td>@env.Key</td>
                    <td>@env.Value</td>
                </tr>
            }
        </tbody>
    </table>
        </Body>
    </Expander>
    <Expander Class="mb-3">
        <Header>
             <h5>Plugins</h5>
        </Header>
        <Body>
            @if(applicationInfo.Plugins == null
            || !applicationInfo.Plugins.Any())
            {
                <b class="text-warning">No plugins detected</b>
            }
            else
            {
                foreach (var plugin in applicationInfo.Plugins)
                {
                    <div class="border border-secondary rounded-2 my-3 p-3">
                        <Expander>
                        <Header><b>@plugin.Metadata.Name</b><span class="badge bg-secondary ms-2">@plugin.Metadata.Version</span><span class="badge bg-primary ms-2 ">@EnumHelper.Stringify(plugin.Metadata.Type)</span><span class="ms-2 oi @(plugin.IsLoaded ? "oi-circle-check text-success": "oi:x text-danger")"></span></Header>
                        <Body>
                            <table class="table table-striped table-bordered my-3">
                                <tbody>
                                    <tr>
                                        <td>Type</td>
                                        <td><span class="badge bg-secondary">@EnumHelper.Stringify(plugin.Metadata.Type)</span></td>
                                    </tr>
                                    <tr>
                                        <td>Name</td>
                                        <td>@plugin.Metadata.Name</td>
                                    </tr>
                                    <tr>
                                        <td>Description</td>
                                        <td>@plugin.Metadata.Description</td>
                                    </tr>
                                    <tr>
                                        <td>Version</td>
                                        <td><span class="badge bg-secondary">@plugin.Metadata.Version</span></td>
                                    </tr>
                                    <tr>
                                        <td>Authors</td>
                                        <td>@plugin.Metadata.Authors</td>
                                    </tr>
                                    <tr>
                                        <td>Copyright</td>
                                        <td>@plugin.Metadata.Copyright</td>
                                    </tr>
                                    <tr>
                                        <td>Tags</td>
                                        <td>@((MarkupString)string.Join(',', plugin.Metadata.Tags.Select(l => $@"<span class=""badge bg-secondary"">{l}</span>")))</td>
                                    </tr>
                                                                        <tr>
                                        <td>Location</td>
                                        <td><span class="badge bg-secondary">@plugin.Location</span></td>
                                    </tr>
                                    <tr>
                                        <td>Loaded</td>
                                        <td><span class="badge bg-secondary">@plugin.IsLoaded</span></td>
                                    </tr>
                                     @if(plugin.Metadata.LicenseUri != null)
                                    {
                                        <tr>
                                            <td>License</td>
                                            <td><a href="@plugin.Metadata.LicenseUri" target="_blank">@plugin.Metadata.LicenseUri</a></td>
                                        </tr>
                                    }
                                    @if(plugin.Metadata.ReadmeUri != null)
                                    {
                                        <tr>
                                            <td>Readme</td>
                                            <td><a href="@plugin.Metadata.ReadmeUri" target="_blank">@plugin.Metadata.ReadmeUri</a></td>
                                        </tr> 
                                    }
                                    @if(plugin.Metadata.WebsiteUri != null)
                                    {
                                        <tr>
                                            <td>Website</td>
                                            <td><a href="@plugin.Metadata.WebsiteUri" target="_blank">@plugin.Metadata.WebsiteUri</a></td>
                                        </tr> 
                                    }
                                    @if(plugin.Metadata.RepositoryUri != null)
                                    {
                                        <tr>
                                            <td>Repository</td>
                                            <td><a href="@plugin.Metadata.RepositoryUri" target="_blank">@plugin.Metadata.RepositoryUri</a></td>
                                        </tr> 
                                    }
                                </tbody>
                            </table>
                        </Body>
                    </Expander>
                    </div>
                }
            }
        </Body>
    </Expander>
   
    
}
else
{
    <Loader />
}

@code {

    protected IDisposable? subscription = null!;
    private V1ApplicationInfo applicationInfo = null!;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await this.BreadcrumbService.Use(KnownBreadcrumbs.System);
        this.subscription = this.Feature
            .Subscribe(applicationState =>
            {
                this.applicationInfo = applicationState.Info!;
                this.StateHasChanged();
            });
        this.Dispatcher.Dispatch(new GetV1ApplicationInfo());
    }

    protected override void Dispose(bool disposing)
    {
        base.Dispose(disposing);
        if (disposing)
        {
            this.subscription?.Dispose();
            this.subscription = null;
        }
    }

}
