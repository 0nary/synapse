@namespace Synapse.Dashboard
@page "/"
@using Neuroglia.Blazor.Dagre
@using Neuroglia.Blazor.Dagre.Models
@using Synapse.Dashboard.Features.Test
@using System.Dynamic
@inject IBreadcrumbService BreadcrumbService
@inject DagreService Dagre

<PageTitle>Overview</PageTitle>
<AppHeader>
    <span class="h5 m-0 p-0">Overview</span>
</AppHeader>

Welcome to Synapse - Serverless Workflow Management System

<Counter />

<Table Items="@users">
    <RowTemplate Context="row">
        <Expander HeaderContainerTagName="tr" BodyContainerTagName="tr">
            <HeaderTemplate Context="header">@header.Header</HeaderTemplate>
            <Header>
                <ColumnHeaderCollectionPresenter T="TestUserState" />
            </Header>
            <Body>
                <td colspan="100%">Some exapandable content</td>
            </Body>
        </Expander>
    </RowTemplate>
    <Columns>
        <Column T="TestUserState" Name="Test">
            <CellTemplate Context="context">
                <div class="badge rounded-pill bg-primary">Some value</div>
            </CellTemplate>
        </Column>
    </Columns>
</Table>

@code{

    private List<TestUserState> users = new() { new("FakeFirstName", "Fake Last Name", "fake@email.com"), new("FakeFirstName", "Fake Last Name", "fake@email.com") };

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await this.BreadcrumbService.Use(KnownBreadcrumbs.Home);
        IDagreGraphOptions options = new DagreGraphOptions() { Direction = DagreGraphDirection.TopToBottom };
        var graph = await this.Dagre.Graph(options);
        var start = new GraphLibNode()
        {
            Label = "",
            Metadata = new Dictionary<string, object>()
            {
                { "Type", "Start" },
                { "Foo", "Bar" },
            }
        };
        await graph.SetNode(start.Id.ToString(), start);
        var state1 = new GraphLibNode()
        {
            Label = "State 1",
            Rx = 5,
            Ry = 5,
            Metadata = new Dictionary<string, object>()
            {
                { "Type", "State" },                
                { "Fizz", "Buzz" },
            }
        };
        await graph.SetNode(state1.Id.ToString(), state1);
        await graph.SetEdge(start.Id.ToString(), state1.Id.ToString());
        await this.Dagre.Layout(graph);
        Console.WriteLine(await this.Dagre.Serialize(graph));
    }

    public class TestUserState
    {

        public TestUserState(string firstName, string lastName, string email)
        {
            this.FirstName = firstName;
            this.LastName = lastName;
            this.Email = email;
        }

        public string FirstName{ get; }

        public string LastName{ get; }

        public string Email { get; }

    }

}