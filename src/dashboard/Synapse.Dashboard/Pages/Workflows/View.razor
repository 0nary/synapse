@page "/workflows/{workflowId}"
@using Blazor.Diagrams.Core
@using Microsoft.AspNetCore.SignalR.Client
@using Synapse.Dashboard.Components
@using Synapse.Integration.Models
@using Synapse.Integration.Services
@inject ISynapseApi SynapseApi
@inject IWorkflowDiagramBuilder WorkflowDiagramBuilder

<PageTitle>@workflow?.Id</PageTitle>
<AppHeader>@workflow?.Id</AppHeader>

@if (workflow != null)
{
    <WorkflowDiagram Diagram="diagram" />
    <Modal @ref="modal">
        <Title>Error</Title>
        <Body>
            <p>An error occured:</p>
            <div class="border rounded bg-danger text-white text-break p-1">@((MarkupString)error)</div>
        </Body>
        <Footer>
            <button @onclick="() => modal.Hide()" class="btn btn-secondary">Close</button>
        </Footer>
    </Modal>
}
else
{
    <p>Loading...</p>
}
@code
{

    [Parameter]
    public string WorkflowId { get; set; } = null!;

    private Modal modal = null!;
    private V1WorkflowDto workflow = null!;
    private Diagram diagram { get; set; } = null!;
    private string error;

    protected override async Task OnInitializedAsync()
    {
        this.workflow = await this.SynapseApi.GetWorkflowByIdAsync(this.WorkflowId);
        this.diagram = await this.WorkflowDiagramBuilder.BuildDiagram(this.workflow.Definition);
        this.StateHasChanged();
        await base.OnInitializedAsync();
    }

}