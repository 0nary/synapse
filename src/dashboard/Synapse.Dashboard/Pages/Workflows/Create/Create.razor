@* 
    Copyright © 2022-Present The Synapse Authors
    <p>
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
    <p>
    http://www.apache.org/licenses/LICENSE-2.0
    <p>
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
*@

@page "/workflows/new"
@inject IDispatcher Dispatcher
@inject IBreadcrumbService BreadcrumbService
@inherits StatefulComponent<State.CreateWorkflowState>

<PageTitle>New workflow</PageTitle>
<AppHeader>
    <span class="h5 m-0 p-0">New workflow</span>
</AppHeader>
<div class="h-100 mh-100 flex-grow d-flex flex-column justify-content-between align-items-start">
    @if (State.ShowVisualEditor)
    {
        <WorkflowVisualEditor OnSubmitWorkflowDefinition="OnCreateWorkflow" />
    }
    else {    
        <WorkflowForm OnSubmitWorkflowDefinition="OnCreateWorkflow" />
    }
    <!--
    <div class="form-check form-switch align-self-end">
        <input class="form-check-input" type="checkbox" role="switch" id="show-visual-editor-switch" checked="@State.ShowVisualEditor" @onchange="ToggleVisualEditor">
        <label class="form-check-label" for="show-visual-editor-switch">Show visual editor</label>
    </div>
    -->
</div>

@code {
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await this.BreadcrumbService.Use(KnownBreadcrumbs.CreateWorkflow);
    }

    protected virtual void OnCreateWorkflow(WorkflowDefinition definition)
    {
        
        this.Dispatcher.Dispatch(new Actions.CreateWorkflow(definition));
    }

    protected virtual void ToggleVisualEditor()
    {
        this.Dispatcher.Dispatch(new Actions.ToggleVisualEditor());
    }

}
