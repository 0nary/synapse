<g class="node @Node.CssClass" transform="translate(@((Node.X ?? 0).ToInvariantString()), @((Node.Y ?? 0).ToInvariantString()))">
    <g class="node-shape">
        @if (Node.Shape == NodeShape.Circle)
        {
            <Circle BBox="Node.BBox" />
        }
        else if (Node.Shape == NodeShape.Ellipse)
        {
            <Ellipse BBox="Node.BBox" />
        }
        else
        {        
            <Rectangle BBox="Node.BBox" RadiusX="Node.RadiusX" RadiusY="Node.RadiusY" />
        }
    </g>
    <Label Text="@Node.Label" BBox="Node.BBox" />
</g>

@code {
    [CascadingParameter]
    public virtual IGraphViewModel Graph { get; set; } = null!;

    [Parameter]
    public virtual IGraphElement Element { get; set; } = null!;

    protected INodeViewModel Node => (INodeViewModel)this.Element;
}
